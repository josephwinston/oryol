<Generator type="MessageProtocol" ns="IO" name="IOProtocol" id="IOPT" >

    <Header path="Core/Ptr.h" />
    <Header path="IO/Core/URL.h" />
    <Header path="IO/Core/IOStatus.h" />
    <Header path="IO/Stream/MemoryStream.h" />

    <!-- a generic IORequest message -->
    <Message name="Request" serialize="false" >
        <Attr name="URL" type="IO::URL" />
        <Attr name="Lane" type="int32" />
        <Attr name="CacheReadEnabled" type="bool" />
        <Attr name="CacheWriteEnabled" type="bool" />
        <Attr name="Status" type="IOStatus::Code" def="IOStatus::InvalidIOStatus" dir="out" />
        <Attr name="ErrorDesc" type="Core::String" dir="out" />
    </Message>
    
    <!-- fetch complete file -->
    <Message name="Get" parent="Request" serialize="false">
        <Attr name="Stream" type="Core::Ptr&lt;IO::MemoryStream&gt;" dir="out" />
    </Message>

    <!-- fetch a file range -->
    <Message name="GetRange" parent="Get" serialize="false">
        <Attr name="StartOffset" type="int32" def="0" />
        <Attr name="EndOffset" type="int32" def="0" />
    </Message>

    <!-- notify message base class, these are forwarded to all IO lanes -->
    <Message name="notifyLanes" serialize="false"/>

    <!-- internal message: notify IO threads that a filesystem has been removed -->
    <Message name="notifyFileSystemRemoved" parent="notifyLanes" serialize="false" >
        <Attr name="Scheme" type="Core::StringAtom" />
    </Message>

    <!-- internal message: notify IO threads that a filesystem has been replaced -->
    <Message name="notifyFileSystemReplaced" parent="notifyLanes" serialize="false" >
        <Attr name="Scheme" type="Core::StringAtom" />
    </Message>

    <!-- internal message: notify IO threads that a filesystem has been added -->
    <Message name="notifyFileSystemAdded" parent="notifyLanes" serialize="false" >
        <Attr name="Scheme" type="Core::StringAtom" />
    </Message>

</Generator>
