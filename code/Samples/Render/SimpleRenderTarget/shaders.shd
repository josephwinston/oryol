//------------------------------------------------------------------------------
//  shaders.shd
//  Annotated GLSL shaders for SimpleRenderTarget sample
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//  Vertex and fragment shaders for rendering into the offscreen render target
//
@vs renderTargetVS
@uniform mat4 mvp ModelViewProjection
@in vec4 position
@in vec4 normal
@out vec4 nrm
void main() {
    $position = mvp * position;
    nrm = normal;
}
@end

@fs renderTargetFS
@in vec4 nrm
void main() {
    $color = nrm * 0.5 + 0.5;
}
@end

@bundle RenderTarget
@program renderTargetVS renderTargetFS
@end

//------------------------------------------------------------------------------
//  Vertex and fragment shaders for rendering into the frame buffer.
//
@vs mainVS
@uniform mat4 mvp ModelViewProjection
@in vec4 position
@in vec4 normal
@in vec2 texcoord0
@out vec4 nrm
@out vec2 uv
void main() {
    $position = mvp * position;
    uv = texcoord0;
    nrm = normalize(mvp * normal);
}
@end

@fs mainFS
@uniform sampler2D tex Texture
@in vec2 uv
@in vec4 nrm
void main() {
    vec4 c = $texture2D(tex, uv * vec2(20.0, 10.0));
    float l = clamp(dot(nrm.xyz, normalize(vec3(1.0, 1.0, -1.0))), 0.0, 1.0) * 2.0;
    $color = c * (l + 0.25);
}
@end

@bundle Main
@program mainVS mainFS
@end

